name: Tests and linters
on:
  workflow_call:
    inputs:
      artifacthub:
        description: "check artifacthub-pkg.yml for submission to ArtifactHub"
        required: false
        type: boolean
        default: true
    secrets: {}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "stable"

      - name: run Go unit tests
        run: make test

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v3.1.16
      # TinyGo requires the official Go compiler to be installed
      # Ensure latest stable release is available, do not rely on what
      # is provided out of the box by  the GH runner
      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Install tinygo
        shell: bash
        run: |
          wget https://github.com/tinygo-org/tinygo/releases/download/v0.30.0/tinygo_0.30.0_amd64.deb
          sudo dpkg -i tinygo_0.30.0_amd64.deb
      - name: Build Wasm module
        shell: bash
        run: |
          # we have to remove the wasm-opt binary bundled with the tinygo package,
          # this will lead to our binary being used (the one installed by the `policy-gh-action-dependencies`
          # step)
          sudo rm /usr/local/lib/tinygo/bin/wasm-opt
          wasm-opt --version
          tinygo build -o policy.wasm -target=wasi -no-debug .
      - name: Annotate Wasm module
        shell: bash
        run: |
          make annotated-policy.wasm
      - name: Run e2e tests
        run: make e2e-tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "stable"
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64 # v6.0.1
        with:
          version: "latest"

  check-artifacthub:
    if: ${{ inputs.artifacthub }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # until https://github.com/actions/checkout/pull/579 is released
          fetch-depth: 0
      - name: Install kwctl
        uses: kubewarden/github-actions/kwctl-installer@v3.1.16
      - id: calculate-version
        run: echo "version=$(git describe --tags --abbrev=0 | cut -c2-)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Check that artifacthub-pkg.yml is up-to-date
        uses: kubewarden/github-actions/check-artifacthub@v3.1.16
        with:
          version: ${{ steps.calculate-version.outputs.version }}
          check_version: false # must match a git tag that hasn't been created yet, so let's ignore until then
